on: [push, workflow_dispatch]
name: Go_to_ACR

jobs:
    build-and-push-image:
      name: Build and Push Docker Image
      runs-on: ubuntu-latest
      steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@master
        
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - uses: azure/docker-login@v1
        with:
          login-server: acrfortests.azurecr.io
          username: ${{ secrets.GIT_TO_ACR_USER }}
          password: ${{ secrets.GIT_TO_ACR_PASS }}
      - run: |
          docker build . -t acrfortests.azurecr.io/go-wth-gin-app:${{ github.sha }}
          docker push acrfortests.azurecr.io/go-wth-gin-app:${{ github.sha }}

    deploy-to-aci:
      name: Deploy to Azure Container Instances
      runs-on: ubuntu-latest
      needs: build-and-push-image
      steps:
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.GOWTHGINAPP_AZURE_CREDENTIALS }}

        - name: 'Deploy to Azure Container Instances'
          uses: 'azure/aci-deploy@v1'
          with:
            resource-group: RG_GO_DOCKER_TESTS
            dns-name-label: go-wth-gin
            image: acrfortests.azurecr.io/go-wth-gin-app:${{ github.sha }}
            registry-login-server: acrfortests.azurecr.io
            registry-username: ${{ secrets.GOWTHGINAPP_REGISTRY_USERNAME }}
            registry-password: ${{ secrets.GOWTHGINAPP_REGISTRY_PASSWORD }}
            name: go-wth-gin
            location: east us 2
            memory: 1
            restart-policy: OnFailure
    
    deploy-to-aca:
      name: Deploy to Azure Container Apps
      runs-on: ubuntu-latest
      needs: build-and-push-image
      steps:
        - name: Checkout to the branch
          uses: actions/checkout@v2
  
        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.GOWTHGINAPP_AZURE_CREDENTIALS }}
  
        - name: Build and push container image to registry
          uses: azure/container-apps-deploy-action@v2
          with:
            appSourcePath: ${{ github.workspace }} 
            registryUrl: acrfortests.azurecr.io
            registryUsername: ${{ secrets.GOWTHGINAPP_REGISTRY_USERNAME }}
            registryPassword: ${{ secrets.GOWTHGINAPP_REGISTRY_PASSWORD }}
            containerAppName: go-wth-gin-app
            resourceGroup: RG_GO_DOCKER_TESTS
            imageToBuild: acrfortests.azurecr.io/go-wth-gin-app:${{ github.sha }}
            dockerfilePath: Dockerfile

    deploy-to-aks:
      name: Deploy to Azure Kubernetes Service
      runs-on: ubuntu-latest
      needs: build-and-push-image
      steps:
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@master

        - name: 'Docker Auth'
          uses: Azure/docker-login@v1
          with:
             login-server: acrfortests.azurecr.io
             username: ${{ secrets.GOWTHGINAPP_REGISTRY_USERNAME }}
             password: ${{ secrets.GOWTHGINAPP_REGISTRY_PASSWORD }}
        - name: Setup kubectl
          uses: azure/setup-kubectl@v3

        - name: Set AKS context
          uses: azure/aks-set-context@v1
          with:
            creds: '${{ secrets.GOWTHGINAPP_AZURE_CREDENTIALS }}'
            resource-group: 'RG_GO_DOCKER_TESTS' 
            cluster-name: 'aks-cluster-for-gin'

        - name: Create Secret
          uses: Azure/k8s-create-secret@v1.1
          with:
              container-registry-url: acrfortests.azurecr.io
              container-registry-username: ${{ secrets.GOWTHGINAPP_REGISTRY_USERNAME }}
              container-registry-password: ${{ secrets.GOWTHGINAPP_REGISTRY_PASSWORD }}
              secret-name: demo-k8s-secret

        - name: Deploy to AKS
          uses: Azure/k8s-deploy@v4
          with:
            action: deploy
            namespace: 'go-wth-gin-app'
            manifests: |
              deploy-aks.yml
            images: acrfortests.azurecr.io/go-wth-gin-app:${{ github.sha }}
            imagepullsecrets: |
                 demo-k8s-secret